version: '3.3'

services:
  db:
    image: postgres:14
    container_name: mlflow_database
    networks:
      - backend
#    env_file:
#      - ./docker/.env
    expose:
      - ${POSTGRES_PORT}
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - mlflow-postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}', '-d', '${POSTGRES_DB}']
      interval: 5s
      retries: 5

  server:
    build: docker/mlflow
    image: mlflow_server
    container_name: mlflow_server
    networks:
      - frontend
      - backend
#    env_file:
#      - ./docker/.env
    expose:
      - '5000'
    volumes:
      - ./mlruns:/mlruns
    command: [
      'mlflow', 'server', '--host', '0.0.0.0',
      '--backend-store-uri', 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}',
      '--default-artifact-root', 'file:///mlruns'
    ]
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build: docker/nginx
    image: nginx_mlflow
    container_name: mlflow_proxy
    networks:
      - frontend
    ports:
      - '1024:80'
    depends_on:
      server:
        condition: service_started

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mlflow-postgres-db: